{"is_source_file": true, "format": "Kotlin", "description": "This file defines the NotesRepository class, which manages CRUD operations for notes, acting as an interface between the application and the database (via DAO). It encapsulates data access logic, including methods for retrieving, adding, updating, and deleting notes, and implements the singleton pattern to provide a single repository instance throughout the application.", "external_files": ["AppDatabase", "Note", "noteDao"], "external_methods": ["AppDatabase.getInstance", "noteDao.getAll", "noteDao.getById", "noteDao.insert", "noteDao.update", "noteDao.delete"], "published": ["NotesRepository"], "classes": [{"name": "NotesRepository", "description": "Repository class for managing CRUD operations on notes, employing coroutine context for asynchronous operations, and implementing singleton pattern."}], "methods": [{"name": "getNotes", "description": "Retrieves a list of all notes asynchronously."}, {"name": "getNote", "description": "Fetches a single note by its ID."}, {"name": "addNote", "description": "Creates a new note with specified title and content, returning its ID."}, {"name": "updateNote", "description": "Updates an existing note identified by ID with new title and content."}, {"name": "deleteNote", "description": "Deletes a note by its ID."}, {"name": "getInstance", "description": "Provides a singleton instance of the NotesRepository, initializing it if necessary."}], "calls": ["AppDatabase.getInstance", "noteDao.getAll", "noteDao.getById", "noteDao.insert", "noteDao.update", "noteDao.delete"], "search-terms": ["NotesRepository", "NoteDao", "CRUD", "coroutines", "singleton", "database access", "repository pattern"], "state": 2, "file_id": 10, "knowledge_revision": 21, "git_revision": "", "hash": "23cd3afb8e9fd1f78c7d89e1706b40a0", "format-version": 4, "code-base-name": "android_frontend", "filename": "android_frontend/app/src/main/kotlin/org/example/app/data/NotesRepository.kt", "revision_history": [{"21": ""}]}